ylab("Recombination rate (cM/Mb)") +
theme(panel.background = element_blank(),
axis.line = element_line(size = 0.2, colour = "gray"),
axis.title = element_text(size = 10),
legend.text = element_text(size = 10),
legend.key=element_blank(),
legend.title = element_blank())
corr_dens_rr_red
corr_dens_rr_red <-
ggplot(data_reduced, aes(density_var, rec_rate)) +
geom_point(aes(fill=chr_type),shape=21,size=1, stroke=0.1, key_glyph=draw_key_abline) +
geom_smooth(method = "lm", colour=col_all, fill=col_all, fullrange=T, se=F) +
geom_smooth(data=subset(data_reduced, chr_type == "W"), method = "lm", colour=col_W, fill=col_W, fullrange=T, se=F) +
geom_smooth(data=subset(data_reduced, chr_type == "Z"), method = "lm", colour=col_Z, fill=col_Z, fullrange=T, se=F) +
geom_smooth(data=subset(data_reduced, chr_type == "Autosome"), method = "lm", colour=col_autosome, fill=col_autosome, fullrange=T, se=F) +
facet_wrap(~gen_feat, scales = "free") +
scale_fill_discrete(type = c(col_autosome, col_W, col_Z)) +
scale_y_continuous(limits = c(0,16)) +
xlab("Density (Counts per kb)") +
ylab("Recombination rate (cM/Mb)") +
theme(panel.background = element_blank(),
axis.line = element_line(size = 0.2, colour = "gray"),
axis.title = element_text(size = 10),
legend.text = element_text(size = 10),
legend.key=element_blank(),
legend.title = element_blank())
corr_dens_rr_red
corr_dens_rr_red <-
ggplot(data_reduced, aes(density_var, rec_rate)) +
geom_point(aes(fill=chr_type),shape=21,size=1, stroke=0.1, key_glyph=draw_key_hline) +
geom_smooth(method = "lm", colour=col_all, fill=col_all, fullrange=T, se=F) +
geom_smooth(data=subset(data_reduced, chr_type == "W"), method = "lm", colour=col_W, fill=col_W, fullrange=T, se=F) +
geom_smooth(data=subset(data_reduced, chr_type == "Z"), method = "lm", colour=col_Z, fill=col_Z, fullrange=T, se=F) +
geom_smooth(data=subset(data_reduced, chr_type == "Autosome"), method = "lm", colour=col_autosome, fill=col_autosome, fullrange=T, se=F) +
facet_wrap(~gen_feat, scales = "free") +
scale_fill_discrete(type = c(col_autosome, col_W, col_Z)) +
scale_y_continuous(limits = c(0,16)) +
xlab("Density (Counts per kb)") +
ylab("Recombination rate (cM/Mb)") +
theme(panel.background = element_blank(),
axis.line = element_line(size = 0.2, colour = "gray"),
axis.title = element_text(size = 10),
legend.text = element_text(size = 10),
legend.key=element_blank(),
legend.title = element_blank())
corr_dens_rr_red <-
ggplot(data_reduced, aes(density_var, rec_rate)) +
geom_point(aes(fill=chr_type),shape=21,size=1, stroke=0.1, key_glyph=draw_key_rect) +
geom_smooth(method = "lm", colour=col_all, fill=col_all, fullrange=T, se=F) +
geom_smooth(data=subset(data_reduced, chr_type == "W"), method = "lm", colour=col_W, fill=col_W, fullrange=T, se=F) +
geom_smooth(data=subset(data_reduced, chr_type == "Z"), method = "lm", colour=col_Z, fill=col_Z, fullrange=T, se=F) +
geom_smooth(data=subset(data_reduced, chr_type == "Autosome"), method = "lm", colour=col_autosome, fill=col_autosome, fullrange=T, se=F) +
facet_wrap(~gen_feat, scales = "free") +
scale_fill_discrete(type = c(col_autosome, col_W, col_Z)) +
scale_y_continuous(limits = c(0,16)) +
xlab("Density (Counts per kb)") +
ylab("Recombination rate (cM/Mb)") +
theme(panel.background = element_blank(),
axis.line = element_line(size = 0.2, colour = "gray"),
axis.title = element_text(size = 10),
legend.text = element_text(size = 10),
legend.key=element_blank(),
legend.title = element_blank())
corr_dens_rr_red
corr_dens_rr_red <-
ggplot(data_reduced, aes(density_var, rec_rate)) +
geom_point(aes(fill=chr_type),shape=21,size=1, stroke=0.1, key_glyph=draw_key_rect(size = c(3,1))) +
geom_smooth(method = "lm", colour=col_all, fill=col_all, fullrange=T, se=F) +
geom_smooth(data=subset(data_reduced, chr_type == "W"), method = "lm", colour=col_W, fill=col_W, fullrange=T, se=F) +
geom_smooth(data=subset(data_reduced, chr_type == "Z"), method = "lm", colour=col_Z, fill=col_Z, fullrange=T, se=F) +
geom_smooth(data=subset(data_reduced, chr_type == "Autosome"), method = "lm", colour=col_autosome, fill=col_autosome, fullrange=T, se=F) +
facet_wrap(~gen_feat, scales = "free") +
scale_fill_discrete(type = c(col_autosome, col_W, col_Z)) +
scale_y_continuous(limits = c(0,16)) +
xlab("Density (Counts per kb)") +
ylab("Recombination rate (cM/Mb)") +
theme(panel.background = element_blank(),
axis.line = element_line(size = 0.2, colour = "gray"),
axis.title = element_text(size = 10),
legend.text = element_text(size = 10),
legend.key=element_blank(),
legend.title = element_blank())
corr_dens_rr_red <-
ggplot(data_reduced, aes(density_var, rec_rate)) +
geom_point(aes(fill=chr_type),shape=21,size=1, stroke=0.1, key_glyph=draw_key_rect(chr_type, size = c(3,1))) +
geom_smooth(method = "lm", colour=col_all, fill=col_all, fullrange=T, se=F) +
geom_smooth(data=subset(data_reduced, chr_type == "W"), method = "lm", colour=col_W, fill=col_W, fullrange=T, se=F) +
geom_smooth(data=subset(data_reduced, chr_type == "Z"), method = "lm", colour=col_Z, fill=col_Z, fullrange=T, se=F) +
geom_smooth(data=subset(data_reduced, chr_type == "Autosome"), method = "lm", colour=col_autosome, fill=col_autosome, fullrange=T, se=F) +
facet_wrap(~gen_feat, scales = "free") +
scale_fill_discrete(type = c(col_autosome, col_W, col_Z)) +
scale_y_continuous(limits = c(0,16)) +
xlab("Density (Counts per kb)") +
ylab("Recombination rate (cM/Mb)") +
theme(panel.background = element_blank(),
axis.line = element_line(size = 0.2, colour = "gray"),
axis.title = element_text(size = 10),
legend.text = element_text(size = 10),
legend.key=element_blank(),
legend.title = element_blank())
corr_dens_rr_red <-
ggplot(data_reduced, aes(density_var, rec_rate)) +
geom_point(aes(fill=chr_type),shape=21,size=1, stroke=0.1, key_glyph=draw_key_rect(data_reduced$chr_type, size = c(3,1))) +
geom_smooth(method = "lm", colour=col_all, fill=col_all, fullrange=T, se=F) +
geom_smooth(data=subset(data_reduced, chr_type == "W"), method = "lm", colour=col_W, fill=col_W, fullrange=T, se=F) +
geom_smooth(data=subset(data_reduced, chr_type == "Z"), method = "lm", colour=col_Z, fill=col_Z, fullrange=T, se=F) +
geom_smooth(data=subset(data_reduced, chr_type == "Autosome"), method = "lm", colour=col_autosome, fill=col_autosome, fullrange=T, se=F) +
facet_wrap(~gen_feat, scales = "free") +
scale_fill_discrete(type = c(col_autosome, col_W, col_Z)) +
scale_y_continuous(limits = c(0,16)) +
xlab("Density (Counts per kb)") +
ylab("Recombination rate (cM/Mb)") +
theme(panel.background = element_blank(),
axis.line = element_line(size = 0.2, colour = "gray"),
axis.title = element_text(size = 10),
legend.text = element_text(size = 10),
legend.key=element_blank(),
legend.title = element_blank())
corr_dens_rr_red <-
ggplot(data_reduced, aes(density_var, rec_rate)) +
geom_point(aes(fill=chr_type),shape=21,size=1, stroke=0.1, key_glyph=draw_key_rect(as_factor(data_reduced$chr_type), size = c(3,1))) +
geom_smooth(method = "lm", colour=col_all, fill=col_all, fullrange=T, se=F) +
geom_smooth(data=subset(data_reduced, chr_type == "W"), method = "lm", colour=col_W, fill=col_W, fullrange=T, se=F) +
geom_smooth(data=subset(data_reduced, chr_type == "Z"), method = "lm", colour=col_Z, fill=col_Z, fullrange=T, se=F) +
geom_smooth(data=subset(data_reduced, chr_type == "Autosome"), method = "lm", colour=col_autosome, fill=col_autosome, fullrange=T, se=F) +
facet_wrap(~gen_feat, scales = "free") +
scale_fill_discrete(type = c(col_autosome, col_W, col_Z)) +
scale_y_continuous(limits = c(0,16)) +
xlab("Density (Counts per kb)") +
ylab("Recombination rate (cM/Mb)") +
theme(panel.background = element_blank(),
axis.line = element_line(size = 0.2, colour = "gray"),
axis.title = element_text(size = 10),
legend.text = element_text(size = 10),
legend.key=element_blank(),
legend.title = element_blank())
corr_dens_rr_red <-
ggplot(data_reduced, aes(density_var, rec_rate)) +
geom_point(aes(fill=chr_type),shape=21,size=1, stroke=0.1, key_glyph=draw_key_rect(as.data.frame.factor(data_reduced$chr_type), size = c(3,1))) +
geom_smooth(method = "lm", colour=col_all, fill=col_all, fullrange=T, se=F) +
geom_smooth(data=subset(data_reduced, chr_type == "W"), method = "lm", colour=col_W, fill=col_W, fullrange=T, se=F) +
geom_smooth(data=subset(data_reduced, chr_type == "Z"), method = "lm", colour=col_Z, fill=col_Z, fullrange=T, se=F) +
geom_smooth(data=subset(data_reduced, chr_type == "Autosome"), method = "lm", colour=col_autosome, fill=col_autosome, fullrange=T, se=F) +
facet_wrap(~gen_feat, scales = "free") +
scale_fill_discrete(type = c(col_autosome, col_W, col_Z)) +
scale_y_continuous(limits = c(0,16)) +
xlab("Density (Counts per kb)") +
ylab("Recombination rate (cM/Mb)") +
theme(panel.background = element_blank(),
axis.line = element_line(size = 0.2, colour = "gray"),
axis.title = element_text(size = 10),
legend.text = element_text(size = 10),
legend.key=element_blank(),
legend.title = element_blank())
corr_dens_rr_red <-
ggplot(data_reduced, aes(density_var, rec_rate)) +
geom_point(aes(fill=chr_type),shape=21,size=1, stroke=0.1, key_glyph=draw_key_rect) +
geom_smooth(method = "lm", colour=col_all, fill=col_all, fullrange=T, se=F) +
geom_smooth(data=subset(data_reduced, chr_type == "W"), method = "lm", colour=col_W, fill=col_W, fullrange=T, se=F) +
geom_smooth(data=subset(data_reduced, chr_type == "Z"), method = "lm", colour=col_Z, fill=col_Z, fullrange=T, se=F) +
geom_smooth(data=subset(data_reduced, chr_type == "Autosome"), method = "lm", colour=col_autosome, fill=col_autosome, fullrange=T, se=F) +
facet_wrap(~gen_feat, scales = "free") +
scale_fill_discrete(type = c(col_autosome, col_W, col_Z)) +
scale_y_continuous(limits = c(0,16)) +
xlab("Density (Counts per kb)") +
ylab("Recombination rate (cM/Mb)") +
theme(panel.background = element_blank(),
axis.line = element_line(size = 0.2, colour = "gray"),
axis.title = element_text(size = 10),
legend.text = element_text(size = 10),
legend.key=element_blank(),
legend.title = element_blank())
corr_dens_rr_red
data_reduced <- rr_repeats_genes_long[rr_repeats_genes_long$gen_feat!="CDS" & rr_repeats_genes_long$gen_feat!="gains",]
corr_dens_rr_red <-
ggplot(data_reduced, aes(density_var, rec_rate)) +
geom_point(aes(fill=chr_type),shape=21,size=1, stroke=0.1, key_glyph=draw_key_rect) +
geom_smooth(method = "lm", colour=col_all, fill=col_all, fullrange=T, se=F) +
geom_smooth(data=subset(data_reduced, chr_type == "W"), method = "lm", colour=col_W, fill=col_W, fullrange=T, se=F) +
geom_smooth(data=subset(data_reduced, chr_type == "Z"), method = "lm", colour=col_Z, fill=col_Z, fullrange=T, se=F) +
geom_smooth(data=subset(data_reduced, chr_type == "Autosome"), method = "lm", colour=col_autosome, fill=col_autosome, fullrange=T, se=F) +
facet_wrap(~gen_feat, scales = "free") +
scale_fill_discrete(type = c(col_autosome, col_W, col_Z)) +
scale_y_continuous(limits = c(0,16)) +
xlab("Density (Counts per kb)") +
ylab("Recombination rate (cM/Mb)") +
theme(panel.background = element_blank(),
axis.line = element_line(size = 0.2, colour = "gray"),
axis.title = element_text(size = 10),
legend.text = element_text(size = 10),
legend.key=element_blank(),
legend.title = element_blank())
corr_dens_rr_red
corr_dens_rr_red <-
ggplot(data_reduced, aes(density_var, rec_rate)) +
geom_point(aes(fill=chr_type),shape=21,size=1, stroke=0.1, key_glyph=draw_key_rect) +
geom_smooth(method = "lm", colour=col_all, fill=col_all, fullrange=T, se=F) +
geom_smooth(data=subset(data_reduced, chr_type == "W"), method = "lm", colour=col_W, fill=col_W, fullrange=T, se=F) +
geom_smooth(data=subset(data_reduced, chr_type == "Z"), method = "lm", colour=col_Z, fill=col_Z, fullrange=T, se=F) +
geom_smooth(data=subset(data_reduced, chr_type == "Autosome"), method = "lm", colour=col_autosome, fill=col_autosome, fullrange=T, se=F) +
facet_wrap(~gen_feat, scales = "free") +
scale_fill_discrete(type = c(col_autosome, col_W, col_Z)) +
scale_y_continuous(limits = c(0,16)) +
xlab("Density (Counts per kb)") +
ylab("Recombination rate (cM/Mb)") +
theme(panel.background = element_blank(),
axis.line = element_line(size = 0.2, colour = "gray"),
axis.title = element_text(size = 10),
legend.text = element_text(size = 10),
legend.key=element_blank(),
legend.title = element_blank(),
legend.position = "bottom")
corr_dens_rr_red
corr_dens_rr_red <-
ggplot(data_reduced, aes(density_var, rec_rate)) +
geom_point(aes(fill=chr_type),shape=21,size=1, stroke=0.1, key_glyph=draw_key_rect) +
geom_smooth(method = "lm", colour=col_all, fill=col_all, fullrange=T, se=F) +
geom_smooth(data=subset(data_reduced, chr_type == "W"), method = "lm", colour=col_W, fill=col_W, fullrange=T, se=F) +
geom_smooth(data=subset(data_reduced, chr_type == "Z"), method = "lm", colour=col_Z, fill=col_Z, fullrange=T, se=F) +
geom_smooth(data=subset(data_reduced, chr_type == "Autosome"), method = "lm", colour=col_autosome, fill=col_autosome, fullrange=T, se=F) +
facet_wrap(~gen_feat, scales = "free") +
scale_fill_discrete(type = c(col_autosome, col_W, col_Z), labels=c("Autosomes","W-chromosome","Z-chromosome")) +
scale_y_continuous(limits = c(0,16)) +
xlab("Density (Counts per kb)") +
ylab("Recombination rate (cM/Mb)") +
theme(panel.background = element_blank(),
axis.line = element_line(size = 0.2, colour = "gray"),
axis.title = element_text(size = 10),
legend.text = element_text(size = 10),
legend.key=element_blank(),
legend.title = element_blank(),
legend.position = "bottom")
corr_dens_rr_red
corr_dens_rr_red <-
ggplot(data_reduced, aes(density_var, rec_rate)) +
geom_point(aes(fill=chr_type),shape=21,size=1, stroke=0.1, key_glyph=draw_key_rect) +
geom_smooth(method = "lm", colour=col_all, fill=col_all, fullrange=T, se=F) +
geom_smooth(data=subset(data_reduced, chr_type == "W"), method = "lm", colour=col_W, fill=col_W, fullrange=T, se=F) +
geom_smooth(data=subset(data_reduced, chr_type == "Z"), method = "lm", colour=col_Z, fill=col_Z, fullrange=T, se=F) +
geom_smooth(data=subset(data_reduced, chr_type == "Autosome"), method = "lm", colour=col_autosome, fill=col_autosome, fullrange=T, se=F) +
facet_wrap(~gen_feat, scales = "free") +
scale_fill_discrete(type = c(col_autosome, col_W, col_Z, coll_all), labels=c("Autosomes","W-chromosome","Z-chromosome", "All chromosomes")) +
scale_y_continuous(limits = c(0,16)) +
xlab("Density (Counts per kb)") +
ylab("Recombination rate (cM/Mb)") +
theme(panel.background = element_blank(),
axis.line = element_line(size = 0.2, colour = "gray"),
axis.title = element_text(size = 10),
legend.text = element_text(size = 10),
legend.key=element_blank(),
legend.title = element_blank(),
legend.position = "bottom")
corr_dens_rr_red <-
ggplot(data_reduced, aes(density_var, rec_rate)) +
geom_point(aes(fill=chr_type),shape=21,size=1, stroke=0.1, key_glyph=draw_key_rect) +
geom_smooth(method = "lm", colour=col_all, fill=col_all, fullrange=T, se=F) +
geom_smooth(data=subset(data_reduced, chr_type == "W"), method = "lm", colour=col_W, fill=col_W, fullrange=T, se=F) +
geom_smooth(data=subset(data_reduced, chr_type == "Z"), method = "lm", colour=col_Z, fill=col_Z, fullrange=T, se=F) +
geom_smooth(data=subset(data_reduced, chr_type == "Autosome"), method = "lm", colour=col_autosome, fill=col_autosome, fullrange=T, se=F) +
facet_wrap(~gen_feat, scales = "free") +
scale_fill_discrete(type = c(col_autosome, col_W, col_Z, col_all), labels=c("Autosomes","W-chromosome","Z-chromosome", "All chromosomes")) +
scale_y_continuous(limits = c(0,16)) +
xlab("Density (Counts per kb)") +
ylab("Recombination rate (cM/Mb)") +
theme(panel.background = element_blank(),
axis.line = element_line(size = 0.2, colour = "gray"),
axis.title = element_text(size = 10),
legend.text = element_text(size = 10),
legend.key=element_blank(),
legend.title = element_blank(),
legend.position = "bottom")
corr_dens_rr_red
corr_dens_rr_red
knitr::opts_chunk$set(echo = TRUE)
write.table(rr_repeats_genes_long, file="tables/rec_rate_vs_repeats_genes_2Mb_windows_long.table")
rr_repeats_genes_long <- read.table("tables/rec_rate_vs_repeats_genes_2Mb_windows_long.table")
str(rr_repeats_genes_long)
aggregate(rr_repeats_genes_long$rec_rate, by = rr_repeats_genes_long$pos_group, mean)
aggregate(rr_repeats_genes_long$rec_rate, by = list(rr_repeats_genes_long$pos_group), mean)
aggregate(rr_repeats_genes_long$rec_rate, by = list(rr_repeats_genes_long$pos_group), mean, na.rm=T)
#install.packages("ggpubr")
library(ggplot2)
library(ggpubr)
library(viridis)
library("tidyr")
library(plyr)
library(dplyr)
library(data.table)
library(rstatix)
library(lme4)
pairwise.t.test(rr_repeats_genes_long$rec_rate, rr_repeats_genes_long$pos_group)
boxplot(rr_repeats_genes_long$rec_rate, rr_repeats_genes_long$pos_group)
boxplot(rr_repeats_genes_long$rec_rate~rr_repeats_genes_long$pos_group)
ggplot(rr_repeats_genes_long, aes(pos_group, rec_rate))
ggplot(rr_repeats_genes_long, aes(pos_group, rec_rate)) +
geom_boxplot()
ggplot(rr_repeats_genes_long, aes(pos_group, rec_rate)) +
geom_boxplot(aes(fill=pos_group))
ggplot(rr_repeats_genes_long, aes(pos_group, rec_rate)) +
geom_bar(aes(fill=pos_group))
ggplot(rr_repeats_genes_long, aes(pos_group, rec_rate)) +
geom_bar()
ggplot(rr_repeats_genes_long, aes(pos_group, rec_rate)) +
geom_boxplot()
ggplot(rr_repeats_genes_long, aes(pos_group, rec_rate, group=pos_group)) +
geom_boxplot()
ggplot(rr_repeats_genes_long, aes(pos_group, rec_rate, group=pos_group)) +
geom_boxplot(fill="gray") +
theme(panel.background = element_blank(),
axis.line = element_line(size = 0.2, colour = "gray"),
axis.ticks = element_line(size = 0.2, colour = "gray"),
axis.title = element_text(size = 10),
legend.text = element_text(size = 10),
legend.title = element_blank())
ggplot(rr_repeats_genes_long, aes(pos_group, rec_rate, group=pos_group)) +
geom_boxplot(fill="gray") +
xlab("Racombinaiton rate (cM)") +
ylab("Relative position on the chromosome") +
theme(panel.background = element_blank(),
axis.line = element_line(size = 0.2, colour = "gray"),
axis.ticks = element_line(size = 0.2, colour = "gray"),
axis.title = element_text(size = 10),
legend.text = element_text(size = 10),
legend.title = element_blank())
ggplot(rr_repeats_genes_long, aes(pos_group, rec_rate, group=pos_group)) +
geom_boxplot(fill="gray") +
xlab("Relative position on the chromosome") +
ylab("Recombinaiton rate (cM)") +
theme(panel.background = element_blank(),
axis.line = element_line(size = 0.2, colour = "gray"),
axis.ticks = element_line(size = 0.2, colour = "gray"),
axis.title = element_text(size = 10),
legend.text = element_text(size = 10),
legend.title = element_blank())
ggplot(rr_repeats_genes_long, aes(pos_group, rec_rate, group=pos_group)) +
geom_boxplot(fill="gray", outlier.shape = 21) +
xlab("Relative position on the chromosome") +
ylab("Recombinaiton rate (cM)") +
theme(panel.background = element_blank(),
axis.line = element_line(size = 0.2, colour = "gray"),
axis.ticks = element_line(size = 0.2, colour = "gray"),
axis.title = element_text(size = 10),
legend.text = element_text(size = 10),
legend.title = element_blank())
box_rr_regional <-
ggplot(rr_repeats_genes_long, aes(pos_group, rec_rate, group=pos_group)) +
geom_boxplot(fill="gray", outlier.shape = 21) +
xlab("Relative position on the chromosome") +
ylab("Recombinaiton rate (cM)") +
theme(panel.background = element_blank(),
axis.line = element_line(size = 0.2, colour = "gray"),
axis.ticks = element_line(size = 0.2, colour = "gray"),
axis.title = element_text(size = 10),
legend.text = element_text(size = 10),
legend.title = element_blank())
ggsave("plots_supplement/box_rr_regional", box_rr_regional, "pdf")
ggsave("plots_supplement/box_rr_regional", box_rr_regional, "png")
write.table(aggregate(rr_repeats_genes_long$rec_rate, by = list(rr_repeats_genes_long$pos_group), mean, na.rm=T), file = "tables/rr_regional_pos_mean.table")
write.table(aggregate(rr_repeats_genes_long$rec_rate, by = list(rr_repeats_genes_long$pos_group), sd, na.rm=T), file = "tables/rr_regional_pos_mean.table", append = T)
aggregate(rr_repeats_genes_long$rec_rate, by = list(rr_repeats_genes_long$pos_group), mean, na.rm=T)$x
aggregate(rr_repeats_genes_long$rec_rate, by = list(rr_repeats_genes_long$pos_group), sd, na.rm=T)$x
ggsave("plots_supplement/box_rr_regional", box_rr_regional, "png")
ggsave("plots_supplement/box_rr_regional.pdf", box_rr_regional, "pdf")
ggsave("plots_supplement/box_rr_regional.png", box_rr_regional, "png")
ggsave("plots_supplement/box_rr_regional.pdf", box_rr_regional, "pdf", width = 6, height = 4)
ggsave("plots_supplement/box_rr_regional.png", box_rr_regional, "png", width = 6, height = 4)
corr_plot_rpt_density <-
ggplot(corr_df_long[corr_df_long$var2 %like% "density",], aes(var1, factor(var2, levels = rev(levels(var2))), fill=estimate)) +
geom_tile(size=0) +
facet_wrap(~W) +
geom_text(aes(label=round(estimate, 2), size = 20, colour=cut(p.value, c(-Inf, 0.05, Inf)))) +
scale_fill_gradient2(low = "#2468a0", high = "orange") +
scale_colour_manual(name="p.value",
values = c("(-Inf, 0.05]" = "black",
"(0.05, Inf]" = "light grey"),
labels = c("< 0.05", "> 0.05")) +
scale_x_discrete(position = "top") +
guides(size = "none") +
ggtitle(label = "Density") +
theme(panel.background = element_blank(),
axis.line = element_blank(),
axis.ticks = element_blank(),
axis.text = element_text(size = 10, colour = "black"),
axis.title = element_blank(),
legend.text = element_text(size = 10),
legend.title = element_text(size = 10),
legend.key = element_blank(),
strip.placement = "outside",
strip.background = element_blank())
stats.wilc.test_2Mb_noW <- rr_repeats_genes_long[rr_repeats_genes_long$chr_type!="W",] %>%
group_by(gen_feat) %>%
wilcox_test(density_var ~ gene_ex_bin, detailed = T) %>%
adjust_pvalue(method = "BH") %>%
add_significance()
stats.wilc.test_2Mb_noW
write.table(stats.wilc.test_2Mb_noW, file="tables/wilc.test_2Mb_noW.txt")
capture.output(stats.wilc.test_2Mb_noW, file="tables/wilc.test_2Mb_noW.txt")
as.table(stats.wilc.test_2Mb_noW)
stats.wilc.test_2Mb <- rr_repeats_genes_long %>%
group_by(gen_feat) %>%
wilcox_test(density_var ~ gene_ex_bin, detailed = T) %>%
adjust_pvalue(method = "BH") %>%
add_significance()
stats.wilc.test_2Mb
stats.wilc.test_2Mb_noW$estimate
write.table(stats.wilc.test_2Mb_noW, file="tables/wilc.test_2Mb_noW.txt")
stats.wilc.test_noW <- counts_merged_100kb_long[counts_merged_100kb_long$chr_type!="W",] %>%
group_by(gen_feat) %>%
wilcox_test(counts ~ gene_ex_bin) %>%
adjust_pvalue(method = "BH") %>%
add_significance()
counts_merged_100kb <-read.table("tables/counts_merged_100kb_compl.csv")
str(counts_merged_100kb)
counts_merged_100kb_long <- pivot_longer(counts_merged_100kb, cols=names(select(counts_merged_100kb, starts_with("count"))), names_to="gen_feat", values_to ="counts", names_prefix = )
counts_merged_100kb_long$gen_feat <- as.factor(counts_merged_100kb_long$gen_feat)
counts_merged_100kb_long$gen_feat <- factor(counts_merged_100kb_long$gen_feat, levels = c("count_gene", "count_gene_ex", "count_rpt", "count_LINE", "count_SINE", "count_nonLTR", "count_LTR", "count_DNA", "count_TcM", "count_simple"))
levels(counts_merged_100kb_long$gen_feat) <- gsub("count_", "", levels(counts_merged_100kb_long$gen_feat))
counts_merged_100kb_long <- as.data.frame(counts_merged_100kb_long)
boxplot(counts_merged_100kb_long$counts~counts_merged_100kb_long$gen_feat)
stats.wilc.test <- counts_merged_100kb_long %>%
group_by(gen_feat) %>%
wilcox_test(counts ~ gene_ex_bin, detailed = T) %>%
adjust_pvalue(method = "BH") %>%
add_significance()
stats.wilc.test
stats.wilc.test_noW <- counts_merged_100kb_long[counts_merged_100kb_long$chr_type!="W",] %>%
group_by(gen_feat) %>%
wilcox_test(counts ~ gene_ex_bin) %>%
adjust_pvalue(method = "BH") %>%
add_significance()
stats.wilc.test_noW
stats.wilc.test_noW <- counts_merged_100kb_long[counts_merged_100kb_long$chr_type!="W",] %>%
group_by(gen_feat) %>%
wilcox_test(counts ~ gene_ex_bin, detailed = T) %>%
adjust_pvalue(method = "BH") %>%
add_significance()
stats.wilc.test_noW
write.table(stats.wilc.test_noW, file="tables/wilc.test_100kb_noW.txt")
stats.wilc.test <- counts_merged_100kb_long %>%
group_by(gen_feat) %>%
wilcox_test(counts ~ gene_ex_bin, detailed = T) %>%
adjust_pvalue(method = "BH") %>%
add_significance()
write.table(stats.wilc.test, file="tables/wilc.test_100kb.txt")
corr_dens_rr_red <-
ggplot(data_reduced, aes(density_var, rec_rate)) +
geom_point(aes(fill=chr_type),shape=21,size=1, stroke=0.1, key_glyph=draw_key_rect) +
geom_smooth(method = "lm", colour=col_all, fill=col_all, fullrange=T, se=F) +
geom_smooth(data=subset(data_reduced, chr_type == "W"), method = "lm", colour=col_W, fill=col_W, fullrange=T, se=F) +
geom_smooth(data=subset(data_reduced, chr_type == "Z"), method = "lm", colour=col_Z, fill=col_Z, fullrange=T, se=F) +
geom_smooth(data=subset(data_reduced, chr_type == "Autosome"), method = "lm", colour=col_autosome, fill=col_autosome, fullrange=T, se=F) +
facet_wrap(~gen_feat, scales = "free") +
scale_fill_discrete(type = c(col_autosome, col_W, col_Z, col_all), labels=c("Autosomes","W-chromosome","Z-chromosome", "All chromosomes")) +
scale_y_continuous(limits = c(0,16)) +
xlab("Density (Counts per kb)") +
ylab("Recombination rate (cM/Mb)") +
theme(panel.background = element_blank(),
axis.line = element_line(size = 0.2, colour = "gray"),
axis.title = element_text(size = 10),
axis.ticks = element_line(size = 0.2, colour = "gray"),
legend.text = element_text(size = 10),
legend.key=element_blank(),
legend.title = element_blank(),
legend.position = "bottom")
data_reduced <- rr_repeats_genes_long[rr_repeats_genes_long$gen_feat!="CDS" & rr_repeats_genes_long$gen_feat!="gains",]
corr_dens_rr_red <-
ggplot(data_reduced, aes(density_var, rec_rate)) +
geom_point(aes(fill=chr_type),shape=21,size=1, stroke=0.1, key_glyph=draw_key_rect) +
geom_smooth(method = "lm", colour=col_all, fill=col_all, fullrange=T, se=F) +
geom_smooth(data=subset(data_reduced, chr_type == "W"), method = "lm", colour=col_W, fill=col_W, fullrange=T, se=F) +
geom_smooth(data=subset(data_reduced, chr_type == "Z"), method = "lm", colour=col_Z, fill=col_Z, fullrange=T, se=F) +
geom_smooth(data=subset(data_reduced, chr_type == "Autosome"), method = "lm", colour=col_autosome, fill=col_autosome, fullrange=T, se=F) +
facet_wrap(~gen_feat, scales = "free") +
scale_fill_discrete(type = c(col_autosome, col_W, col_Z, col_all), labels=c("Autosomes","W-chromosome","Z-chromosome", "All chromosomes")) +
scale_y_continuous(limits = c(0,16)) +
xlab("Density (Counts per kb)") +
ylab("Recombination rate (cM/Mb)") +
theme(panel.background = element_blank(),
axis.line = element_line(size = 0.2, colour = "gray"),
axis.title = element_text(size = 10),
axis.ticks = element_line(size = 0.2, colour = "gray"),
legend.text = element_text(size = 10),
legend.key=element_blank(),
legend.title = element_blank(),
legend.position = "bottom")
col_Z <- "#009294"   #"#005F60"
col_W <- "#FAAB36"
col_autosome <- "grey"
col_all <- "#424242" #very dark grey
corr_dens_rr_red <-
ggplot(data_reduced, aes(density_var, rec_rate)) +
geom_point(aes(fill=chr_type),shape=21,size=1, stroke=0.1, key_glyph=draw_key_rect) +
geom_smooth(method = "lm", colour=col_all, fill=col_all, fullrange=T, se=F) +
geom_smooth(data=subset(data_reduced, chr_type == "W"), method = "lm", colour=col_W, fill=col_W, fullrange=T, se=F) +
geom_smooth(data=subset(data_reduced, chr_type == "Z"), method = "lm", colour=col_Z, fill=col_Z, fullrange=T, se=F) +
geom_smooth(data=subset(data_reduced, chr_type == "Autosome"), method = "lm", colour=col_autosome, fill=col_autosome, fullrange=T, se=F) +
facet_wrap(~gen_feat, scales = "free") +
scale_fill_discrete(type = c(col_autosome, col_W, col_Z, col_all), labels=c("Autosomes","W-chromosome","Z-chromosome", "All chromosomes")) +
scale_y_continuous(limits = c(0,16)) +
xlab("Density (Counts per kb)") +
ylab("Recombination rate (cM/Mb)") +
theme(panel.background = element_blank(),
axis.line = element_line(size = 0.2, colour = "gray"),
axis.title = element_text(size = 10),
axis.ticks = element_line(size = 0.2, colour = "gray"),
legend.text = element_text(size = 10),
legend.key=element_blank(),
legend.title = element_blank(),
legend.position = "bottom")
corr_dens_rr_red
ggsave(corr_dens_rr_red, file="plots_supplement/corr_dens_rr_red.pdf", "pdf", dpi = 300)
ggsave(corr_dens_rr_red, file="plots_supplement/corr_dens_rr_red.jpeg", "jpeg", dpi = 300)
